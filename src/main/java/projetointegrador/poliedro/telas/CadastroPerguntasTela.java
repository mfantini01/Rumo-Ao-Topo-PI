/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package projetointegrador.poliedro.telas;

import java.awt.Color;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import projetointegrador.poliedro.modelo.Materia;
import projetointegrador.poliedro.modelo.NivelDificuldade;
import projetointegrador.poliedro.modelo.Pergunta;
import projetointegrador.poliedro.modelo.PerguntaResposta;
import projetointegrador.poliedro.modelo.Resposta;
import projetointegrador.poliedro.modelo.Serie;
import projetointegrador.poliedro.persistencia.DAO;
import projetointegrador.poliedro.persistencia.PerguntaDAO;

/**
 *
 * @author mathe
 */

public class CadastroPerguntasTela extends javax.swing.JFrame {
    private void limparCampos(){
    perguntaTextArea.setText("");
    alternativaATextArea.setText("");
    alternativaBTextArea.setText("");
    alternativaCTextArea.setText("");
    alternativaDTextArea.setText("");
    alternativaETextArea.setText("");
    dicaTextField.setText("");
    
    alternativasButtonGroup.clearSelection();
    
}
    
    private void obterSeries() {
        try {
            var dao = new DAO();
            var series = dao.obterSeries();
            serieComboBox.setModel(
                    new DefaultComboBoxModel<Serie>(series.toArray(new Serie[1]))
            );

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Lista de séries indisponível");
        }
    }
    
    private void obterMaterias() {
        try {
            var dao = new DAO();
            var materias = dao.obterMaterias();
            materiaComboBox.setModel(
                    new DefaultComboBoxModel<Materia>(materias.toArray(new Materia[1]))
            );

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Lista de matérias indisponível");
        }
    }
    
    private void obterNivel() {
        try {
            var dao = new DAO();
            var niveis = dao.obterNivel();
            dificuldadeComboBox.setModel(
                    new DefaultComboBoxModel<NivelDificuldade>(niveis.toArray(new NivelDificuldade[1]))
            );

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Lista de matérias indisponível");
        }
    }
    /**
     * Creates new form CadastroPerguntasTela
     */
    public CadastroPerguntasTela() {
       super("Rumo ao topo - Poliedro"); //Configura o título da tela 
       initComponents();
       obterSeries();
       obterMaterias();
       this.setResizable(false); 
       this.setMaximizedBounds(this.getBounds()); 
       setLocationRelativeTo(null); //centraliza a tela quando ela aparece
       perguntaScrollPane.getViewport().setOpaque(false);
       perguntaScrollPane.setBorder(null);
       perguntaScrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_NEVER);
       alternativaAScrollPane.getViewport().setOpaque(false);
       alternativaAScrollPane.setBorder(null);
       alternativaAScrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_NEVER);
       alternativaBScrollPane.getViewport().setOpaque(false);
       alternativaBScrollPane.setBorder(null);
       alternativaBScrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_NEVER);
       alternativaCScrollPane.getViewport().setOpaque(false);
       alternativaCScrollPane.setBorder(null);
       alternativaCScrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_NEVER);
       alternativaDScrollPane.getViewport().setOpaque(false);
       alternativaDScrollPane.setBorder(null);
       alternativaDScrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_NEVER);
       alternativaEScrollPane.getViewport().setOpaque(false);
       alternativaEScrollPane.setBorder(null);
       alternativaEScrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_NEVER);
       alternativasButtonGroup.add(alternativaARadioButton);
       alternativasButtonGroup.add(alternativaBRadioButton);
       alternativasButtonGroup.add(alternativaCRadioButton);
       alternativasButtonGroup.add(alternativaDRadioButton);
       alternativasButtonGroup.add(alternativaERadioButton);
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        alternativasButtonGroup = new javax.swing.ButtonGroup();
        perguntaScrollPane = new javax.swing.JScrollPane();
        perguntaTextArea = new javax.swing.JTextArea();
        alternativaERadioButton = new javax.swing.JRadioButton();
        alternativaARadioButton = new javax.swing.JRadioButton();
        alternativaDRadioButton = new javax.swing.JRadioButton();
        alternativaCRadioButton = new javax.swing.JRadioButton();
        alternativaBRadioButton = new javax.swing.JRadioButton();
        alternativaAScrollPane = new javax.swing.JScrollPane();
        alternativaATextArea = new javax.swing.JTextArea();
        alternativaBScrollPane = new javax.swing.JScrollPane();
        alternativaBTextArea = new javax.swing.JTextArea();
        alternativaCScrollPane = new javax.swing.JScrollPane();
        alternativaCTextArea = new javax.swing.JTextArea();
        alternativaDScrollPane = new javax.swing.JScrollPane();
        alternativaDTextArea = new javax.swing.JTextArea();
        alternativaEScrollPane = new javax.swing.JScrollPane();
        alternativaETextArea = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        dicaTextField = new javax.swing.JTextField();
        materiaComboBox = new javax.swing.JComboBox<>();
        serieComboBox = new javax.swing.JComboBox<>();
        dificuldadeComboBox = new javax.swing.JComboBox<>();
        voltarButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1080, 720));
        setMinimumSize(new java.awt.Dimension(1080, 720));
        getContentPane().setLayout(null);

        perguntaScrollPane.setViewportBorder(null
        );
        perguntaScrollPane.setOpaque(false);

        perguntaTextArea.setBackground(new Color(0, 0, 0, 0));
        perguntaTextArea.setColumns(20);
        perguntaTextArea.setFont(new java.awt.Font("Segoe UI Semibold", 1, 28)); // NOI18N
        perguntaTextArea.setForeground(Color.WHITE);
        perguntaTextArea.setLineWrap(true);
        perguntaTextArea.setRows(5);
        perguntaTextArea.setWrapStyleWord(true);
        perguntaTextArea.setBorder(null);
        perguntaTextArea.setOpaque(false);
        perguntaScrollPane.setViewportView(perguntaTextArea);

        getContentPane().add(perguntaScrollPane);
        perguntaScrollPane.setBounds(120, 40, 680, 90);
        getContentPane().add(alternativaERadioButton);
        alternativaERadioButton.setBounds(150, 590, 30, 30);
        getContentPane().add(alternativaARadioButton);
        alternativaARadioButton.setBounds(150, 210, 30, 30);
        getContentPane().add(alternativaDRadioButton);
        alternativaDRadioButton.setBounds(150, 495, 30, 30);
        getContentPane().add(alternativaCRadioButton);
        alternativaCRadioButton.setBounds(150, 400, 30, 30);
        getContentPane().add(alternativaBRadioButton);
        alternativaBRadioButton.setBounds(150, 305, 30, 30);

        alternativaAScrollPane.setViewportBorder(null
        );
        alternativaAScrollPane.setOpaque(false);

        alternativaATextArea.setBackground(new Color(0, 0, 0, 0));
        alternativaATextArea.setColumns(20);
        alternativaATextArea.setFont(new java.awt.Font("Segoe UI Semibold", 1, 25)); // NOI18N
        alternativaATextArea.setForeground(Color.WHITE);
        alternativaATextArea.setLineWrap(true);
        alternativaATextArea.setRows(5);
        alternativaATextArea.setWrapStyleWord(true);
        alternativaATextArea.setBorder(null);
        alternativaATextArea.setMaximumSize(new java.awt.Dimension(652, 244));
        alternativaATextArea.setMinimumSize(new java.awt.Dimension(652, 244));
        alternativaATextArea.setOpaque(false);
        alternativaAScrollPane.setViewportView(alternativaATextArea);

        getContentPane().add(alternativaAScrollPane);
        alternativaAScrollPane.setBounds(210, 200, 310, 60);

        alternativaBScrollPane.setViewportBorder(null
        );
        alternativaBScrollPane.setOpaque(false);

        alternativaBTextArea.setBackground(new Color(0, 0, 0, 0));
        alternativaBTextArea.setColumns(20);
        alternativaBTextArea.setFont(new java.awt.Font("Segoe UI Semibold", 1, 25)); // NOI18N
        alternativaBTextArea.setForeground(Color.WHITE);
        alternativaBTextArea.setLineWrap(true);
        alternativaBTextArea.setRows(5);
        alternativaBTextArea.setWrapStyleWord(true);
        alternativaBTextArea.setBorder(null);
        alternativaBTextArea.setMaximumSize(new java.awt.Dimension(652, 244));
        alternativaBTextArea.setMinimumSize(new java.awt.Dimension(652, 244));
        alternativaBTextArea.setOpaque(false);
        alternativaBScrollPane.setViewportView(alternativaBTextArea);

        getContentPane().add(alternativaBScrollPane);
        alternativaBScrollPane.setBounds(210, 290, 310, 70);

        alternativaCScrollPane.setViewportBorder(null
        );
        alternativaCScrollPane.setOpaque(false);

        alternativaCTextArea.setBackground(new Color(0, 0, 0, 0));
        alternativaCTextArea.setColumns(20);
        alternativaCTextArea.setFont(new java.awt.Font("Segoe UI Semibold", 1, 25)); // NOI18N
        alternativaCTextArea.setForeground(Color.WHITE);
        alternativaCTextArea.setLineWrap(true);
        alternativaCTextArea.setRows(5);
        alternativaCTextArea.setWrapStyleWord(true);
        alternativaCTextArea.setBorder(null);
        alternativaCTextArea.setOpaque(false);
        alternativaCScrollPane.setViewportView(alternativaCTextArea);

        getContentPane().add(alternativaCScrollPane);
        alternativaCScrollPane.setBounds(210, 390, 310, 60);

        alternativaDScrollPane.setViewportBorder(null
        );
        alternativaDScrollPane.setOpaque(false);

        alternativaDTextArea.setBackground(new Color(0, 0, 0, 0));
        alternativaDTextArea.setColumns(20);
        alternativaDTextArea.setFont(new java.awt.Font("Segoe UI Semibold", 1, 25)); // NOI18N
        alternativaDTextArea.setForeground(Color.WHITE);
        alternativaDTextArea.setLineWrap(true);
        alternativaDTextArea.setRows(5);
        alternativaDTextArea.setWrapStyleWord(true);
        alternativaDTextArea.setBorder(null);
        alternativaDTextArea.setMaximumSize(new java.awt.Dimension(652, 244));
        alternativaDTextArea.setMinimumSize(new java.awt.Dimension(652, 244));
        alternativaDTextArea.setOpaque(false);
        alternativaDScrollPane.setViewportView(alternativaDTextArea);

        getContentPane().add(alternativaDScrollPane);
        alternativaDScrollPane.setBounds(210, 490, 310, 60);

        alternativaEScrollPane.setViewportBorder(null
        );
        alternativaEScrollPane.setOpaque(false);

        alternativaETextArea.setBackground(new Color(0, 0, 0, 0));
        alternativaETextArea.setColumns(20);
        alternativaETextArea.setFont(new java.awt.Font("Segoe UI Semibold", 1, 25)); // NOI18N
        alternativaETextArea.setForeground(Color.WHITE);
        alternativaETextArea.setLineWrap(true);
        alternativaETextArea.setRows(5);
        alternativaETextArea.setWrapStyleWord(true);
        alternativaETextArea.setBorder(null);
        alternativaETextArea.setMaximumSize(new java.awt.Dimension(652, 244));
        alternativaETextArea.setMinimumSize(new java.awt.Dimension(652, 244));
        alternativaETextArea.setOpaque(false);
        alternativaEScrollPane.setViewportView(alternativaETextArea);

        getContentPane().add(alternativaEScrollPane);
        alternativaEScrollPane.setBounds(210, 580, 310, 60);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetointegrador/poliedro/teste/imagem/folder/BotaoCadastrar.png"))); // NOI18N
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setMaximumSize(new java.awt.Dimension(230, 70));
        jButton1.setMinimumSize(new java.awt.Dimension(230, 70));
        jButton1.setPreferredSize(new java.awt.Dimension(230, 70));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(720, 540, 260, 90);
        getContentPane().add(dicaTextField);
        dicaTextField.setBounds(710, 260, 290, 50);

        materiaComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new Materia[] {
            new Materia(1, "Matemática"),
            new Materia(2, "Português"),
            new Materia(3, "Geografia"),
            new Materia(4, "História"),
            new Materia(5, "Física"),
            new Materia(6, "Química"),
            new Materia(7, "Geometria"),
            new Materia(8, "Biologia")}));
getContentPane().add(materiaComboBox);
materiaComboBox.setBounds(770, 490, 170, 40);

serieComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new Serie[] {
    new Serie(1, "1° Ano"),
    new Serie(2, "2° Ano"), 
    new Serie(3, "3° Ano")
    }));
    serieComboBox.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            serieComboBoxActionPerformed(evt);
        }
    });
    getContentPane().add(serieComboBox);
    serieComboBox.setBounds(650, 370, 170, 40);

    dificuldadeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new NivelDificuldade[] {
        new NivelDificuldade(1, "Fácil"),
        new NivelDificuldade(2, "Médio"),
        new NivelDificuldade(3, "Difícil")
    }));
    dificuldadeComboBox.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            dificuldadeComboBoxActionPerformed(evt);
        }
    });
    getContentPane().add(dificuldadeComboBox);
    dificuldadeComboBox.setBounds(870, 370, 170, 40);

    voltarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetointegrador/poliedro/teste/imagem/folder/BotaoVoltarPequeno.png"))); // NOI18N
    voltarButton.setText("jButton2");
    voltarButton.setBorderPainted(false);
    voltarButton.setContentAreaFilled(false);
    voltarButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            voltarButtonActionPerformed(evt);
        }
    });
    getContentPane().add(voltarButton);
    voltarButton.setBounds(810, 640, 100, 40);

    jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetointegrador/poliedro/teste/imagem/folder/FundoTelaCadastrarPergunta.png"))); // NOI18N
    getContentPane().add(jLabel1);
    jLabel1.setBounds(0, 0, 1080, 720);

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try{
            var enunciado = perguntaTextArea.getText();
            var alternativaA = alternativaATextArea.getText();
            var alternativaB = alternativaBTextArea.getText();
            var alternativaC = alternativaCTextArea.getText();
            var alternativaD = alternativaDTextArea.getText();
            var alternativaE = alternativaETextArea.getText();
            Serie serieSelecionada = (Serie) serieComboBox.getSelectedItem();
            var codigo = serieSelecionada.getCodigo(); // Obterá 1, 2 ou 3
            Materia materiaSelecionada = (Materia) materiaComboBox.getSelectedItem();
            var codigoMateria = materiaSelecionada.getCodigo();
            NivelDificuldade dificuldadeSelecionada = (NivelDificuldade) dificuldadeComboBox.getSelectedItem();
            var codigoDificuldade = dificuldadeSelecionada.getCodigo();
            var dica = dicaTextField.getText(); 
                    

        
            var alt1EhCorreta = alternativaARadioButton.isSelected();
            var alt2EhCorreta = alternativaBRadioButton.isSelected();
            var alt3EhCorreta = alternativaCRadioButton.isSelected();
            var alt4EhCorreta = alternativaDRadioButton.isSelected();
            var alt5EhCorreta = alternativaERadioButton.isSelected();
            //4. montar um modelo de objetos para cada cadastro na base
            var pergunta = new Pergunta(enunciado);
            pergunta.setIdMateria(codigoMateria);
            pergunta.setIdSerie(codigo);
            pergunta.setNivelDificuldade(codigoDificuldade);
            pergunta.setDica(dica);
            var pr1 = new PerguntaResposta(
                pergunta,
                new Resposta(alternativaA),
                alt1EhCorreta
            );
            var pr2 = new PerguntaResposta(
                pergunta,
                new Resposta(alternativaB),
                alt2EhCorreta
            );
            var pr3 = new PerguntaResposta(
                pergunta,
                new Resposta(alternativaC),
                alt3EhCorreta
            );
            var pr4 = new PerguntaResposta(
            pergunta,
            new Resposta(alternativaD),
            alt4EhCorreta
            );
            var pr5 = new PerguntaResposta(
                    pergunta,
                    new Resposta(alternativaE),
                    alt5EhCorreta
            );
            pergunta.getRespostas().add(pr1);
            pergunta.getRespostas().add(pr2);
            pergunta.getRespostas().add(pr3);
            pergunta.getRespostas().add(pr4);
            pergunta.getRespostas().add(pr5);
            
            
            if (!alt1EhCorreta && !alt2EhCorreta && !alt3EhCorreta && !alt4EhCorreta && !alt5EhCorreta) {
                JOptionPane.showMessageDialog(null, "Selecione pelo menos uma alternativa como correta");
                return;
            }
            
            if(enunciado.isEmpty() || alternativaA.isEmpty() || alternativaB.isEmpty() || alternativaC.isEmpty() || alternativaD.isEmpty() || alternativaE.isEmpty()){
                JOptionPane.showMessageDialog(null, "Preencha todos os campos");
            }
            if (serieSelecionada == null || materiaSelecionada == null || dificuldadeSelecionada == null) {
                JOptionPane.showMessageDialog(null, "Selecione uma série/matéria/dificuldade");
                return;
            }
            
            var perguntadao = new PerguntaDAO();
            perguntadao.cadastrar(pergunta);
            
            JOptionPane.showMessageDialog(null, "Pergunta cadastrada com sucesso!!");
            limparCampos();
        }
        catch (Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro ao cadastrar pergunta");
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void serieComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serieComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_serieComboBoxActionPerformed

    private void dificuldadeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dificuldadeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dificuldadeComboBoxActionPerformed

    private void voltarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarButtonActionPerformed
       var mp = new TelaCRUDperguntas();
        mp.setVisible(true);
        dispose();
    }//GEN-LAST:event_voltarButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroPerguntasTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroPerguntasTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroPerguntasTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroPerguntasTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroPerguntasTela().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton alternativaARadioButton;
    private javax.swing.JScrollPane alternativaAScrollPane;
    private javax.swing.JTextArea alternativaATextArea;
    private javax.swing.JRadioButton alternativaBRadioButton;
    private javax.swing.JScrollPane alternativaBScrollPane;
    private javax.swing.JTextArea alternativaBTextArea;
    private javax.swing.JRadioButton alternativaCRadioButton;
    private javax.swing.JScrollPane alternativaCScrollPane;
    private javax.swing.JTextArea alternativaCTextArea;
    private javax.swing.JRadioButton alternativaDRadioButton;
    private javax.swing.JScrollPane alternativaDScrollPane;
    private javax.swing.JTextArea alternativaDTextArea;
    private javax.swing.JRadioButton alternativaERadioButton;
    private javax.swing.JScrollPane alternativaEScrollPane;
    private javax.swing.JTextArea alternativaETextArea;
    private javax.swing.ButtonGroup alternativasButtonGroup;
    private javax.swing.JTextField dicaTextField;
    private javax.swing.JComboBox<NivelDificuldade> dificuldadeComboBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JComboBox<Materia> materiaComboBox;
    private javax.swing.JScrollPane perguntaScrollPane;
    private javax.swing.JTextArea perguntaTextArea;
    private javax.swing.JComboBox<Serie> serieComboBox;
    private javax.swing.JButton voltarButton;
    // End of variables declaration//GEN-END:variables
}
